package SeaFight;

import java.util.Random;

public class Play {
    private final Navy[] navy;

    public Play(Navy navyOne, Navy navyTwo) {
        navy = new Navy[2];
        this.navy[0] = navyOne;
        this.navy[1] = navyTwo;
    }

    public void printOpenedBoard(Navy[] navy) {
        System.out.println("–ò—Å—Ö–æ–¥–Ω–∞—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞:");
        System.out.println("–ü–æ–ª–µ –±–æ—è 1:\t\t\t\t\t\t\t\t\t\t\t–ü–æ–ª–µ –±–æ—è 2:");
        System.out.print(" \t");
        for (int j = 0; j < 10; j++) System.out.print(j + "\t");
        System.out.print("\t\t \t");
        for (int j = 0; j < 10; j++) System.out.print(j + "\t");
        System.out.println();
        for (int i = 0; i < 10; i++) {
            System.out.print(i + "\t");
            for (int j = 0; j < 10; j++) {
                if (navy[0].isDeck(i, j)) {
                    System.out.print("\uD83D\uDEE5\t");
                } else if (navy[0].isAreal(i, j)) {
                    System.out.print("\uD83D\uDFE6\t");
                } else {
                    System.out.print("‚¨ú\t");
                }
            }
            System.out.print("\t\t");
            System.out.print(i + "\t");
            for (int j = 0; j < 10; j++) {
                if (navy[1].isDeck(i, j)) {
                    System.out.print("\uD83D\uDEE5\t");
                } else if (navy[1].isAreal(i, j)) {
                    System.out.print("\uD83D\uDFE6\t");
                } else {
                    System.out.print("‚¨ú\t");
                }
            }
            System.out.println();
        }
    }

    public void printClosedBoard(Navy[] navy) {
        System.out.println("–ü–æ–ª–µ –±–æ—è 1:\t\t\t\t\t\t\t\t\t\t\t–ü–æ–ª–µ –±–æ—è 2:");
        System.out.print(" \t");
        for (int j = 0; j < 10; j++) System.out.print(j + "\t");
        System.out.print("\t\t \t");
        for (int j = 0; j < 10; j++) System.out.print(j + "\t");
        System.out.println();
        for (int i = 0; i < 10; i++) {
            System.out.print(i + "\t");
            for (int j = 0; j < 10; j++) {
                if (navy[0].isHitDeck(i, j)) {
                    System.out.print("üî•\t");
                } else if (navy[0].getBoard().isHitPos(i, j)) {
                    System.out.print("\uD83D\uDFE5\t");
                } else {
                    System.out.print("‚¨ú\t");
                }
            }
            System.out.print("\t\t");
            System.out.print(i + "\t");
            for (int j = 0; j < 10; j++) {
                if (navy[1].isHitDeck(i, j)) {
                    System.out.print("üî•\t");
                } else if (navy[1].getBoard().isHitPos(i, j)) {
                    System.out.print("\uD83D\uDFE5\t");
                } else {
                    System.out.print("‚¨ú\t");
                }
            }
            System.out.println();
        }
    }

    public void loop() {

        printOpenedBoard(navy);

        boolean[] playerWin = {false, false};
        Random rnd = new Random();
        int turn1 = rnd.nextInt(2);     // –ò–Ω–¥–µ–∫—Å –∏–≥—Ä–æ–∫–∞, —Ö–æ–¥—è—â–µ–≥–æ –ø–µ—Ä–≤—ã–º
        int turn2 = (turn1 + 1) % 2;              // –ò–Ω–¥–µ–∫—Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞

        int count = 0;

        while (!playerWin[0] && !playerWin[1]) {

            // –°–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —Ö–æ–¥–∞
            int x, y;
            do {
                x = rnd.nextInt(10);
                y = rnd.nextInt(10);
            } while (navy[turn2].getBoard().isHitPos(x, y));

            System.out.println();
            System.out.printf("–ò–≥—Ä–æ–∫ ‚Ññ%d –¥–µ–ª–∞–µ—Ç —Ö–æ–¥: %d,%d\n", (turn1 + 1), x, y);

            navy[turn2].hitAt(x, y);

            if (navy[turn2].isHitDeck(x, y)) {
                System.out.println("–ü–û–ü–ê–õ!");
                turn1++;                                // –û—Å—Ç–∞–≤–∏–º —Ö–æ–¥ –∑–∞ –ø–µ—Ä–≤—ã–º –∏–≥—Ä–æ–∫–æ–º
                navy[turn2].checkAllShipsAlive();       // –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç—É—Å—ã –∫–æ—Ä–∞–±–ª–µ–π
                if (navy[turn2].isShipBlowUp()) {
                    System.out.println("–ü–û–î–ë–ò–õ!!!");
                }
            } else {
                System.out.println("–ú–∏–º–æ! –ü–µ—Ä–µ—Ö–æ–¥ —Ö–æ–¥–∞.");
            }

            turn1 = (turn1 + 1) % 2; // –ü–µ—Ä–µ—Ö–æ–¥ —Ö–æ–¥–∞.
            turn2 = (turn1 + 1) % 2;

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
            playerWin[0] = navy[1].isNavyBlowUp();
            playerWin[1] = navy[0].isNavyBlowUp();

            printClosedBoard(navy);

            if (count++ > 201) break;  // –ï—Å–ª–∏ –∑–∞—Ü–∏–∫–ª–∏–ª–∏–ª–∏—Å—å –≥–¥–µ-—Ç–æ.

        }

        if (playerWin[0]) System.out.println("–ò–ì–†–û–ö ‚Ññ1 –ü–û–ë–ï–î–ò–õ!!!");
        if (playerWin[1]) System.out.println("–ò–ì–†–û–ö ‚Ññ2 –ü–û–ë–ï–î–ò–õ!!!");

    }
}
